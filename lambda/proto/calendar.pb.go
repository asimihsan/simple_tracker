// Code generated by protoc-gen-go. DO NOT EDIT.
// source: calendar.proto

package simpletracker

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ListCalendarsErrorReason int32

const (
	ListCalendarsErrorReason_LIST_CALENDARS_ERROR_REASON_NO_ERROR                       ListCalendarsErrorReason = 0
	ListCalendarsErrorReason_LIST_CALENDARS_ERROR_REASON_INTERNAL_SERVER_ERROR          ListCalendarsErrorReason = 1
	ListCalendarsErrorReason_LIST_CALENDARS_ERROR_REASON_COULD_NOT_VERIFY_SESSION_ERROR ListCalendarsErrorReason = 2
)

var ListCalendarsErrorReason_name = map[int32]string{
	0: "LIST_CALENDARS_ERROR_REASON_NO_ERROR",
	1: "LIST_CALENDARS_ERROR_REASON_INTERNAL_SERVER_ERROR",
	2: "LIST_CALENDARS_ERROR_REASON_COULD_NOT_VERIFY_SESSION_ERROR",
}

var ListCalendarsErrorReason_value = map[string]int32{
	"LIST_CALENDARS_ERROR_REASON_NO_ERROR":                       0,
	"LIST_CALENDARS_ERROR_REASON_INTERNAL_SERVER_ERROR":          1,
	"LIST_CALENDARS_ERROR_REASON_COULD_NOT_VERIFY_SESSION_ERROR": 2,
}

func (x ListCalendarsErrorReason) String() string {
	return proto.EnumName(ListCalendarsErrorReason_name, int32(x))
}

func (ListCalendarsErrorReason) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_e3d25d49f056cdb2, []int{0}
}

type CreateCalendarErrorReason int32

const (
	CreateCalendarErrorReason_CREATE_CALENDAR_ERROR_REASON_NO_ERROR                       CreateCalendarErrorReason = 0
	CreateCalendarErrorReason_CREATE_CALENDAR_ERROR_REASON_INTERNAL_SERVER_ERROR          CreateCalendarErrorReason = 1
	CreateCalendarErrorReason_CREATE_CALENDAR_ERROR_REASON_COULD_NOT_VERIFY_SESSION_ERROR CreateCalendarErrorReason = 2
)

var CreateCalendarErrorReason_name = map[int32]string{
	0: "CREATE_CALENDAR_ERROR_REASON_NO_ERROR",
	1: "CREATE_CALENDAR_ERROR_REASON_INTERNAL_SERVER_ERROR",
	2: "CREATE_CALENDAR_ERROR_REASON_COULD_NOT_VERIFY_SESSION_ERROR",
}

var CreateCalendarErrorReason_value = map[string]int32{
	"CREATE_CALENDAR_ERROR_REASON_NO_ERROR":                       0,
	"CREATE_CALENDAR_ERROR_REASON_INTERNAL_SERVER_ERROR":          1,
	"CREATE_CALENDAR_ERROR_REASON_COULD_NOT_VERIFY_SESSION_ERROR": 2,
}

func (x CreateCalendarErrorReason) String() string {
	return proto.EnumName(CreateCalendarErrorReason_name, int32(x))
}

func (CreateCalendarErrorReason) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_e3d25d49f056cdb2, []int{1}
}

type GetCalendarsErrorReason int32

const (
	GetCalendarsErrorReason_GET_CALENDARS_ERROR_REASON_NO_ERROR                       GetCalendarsErrorReason = 0
	GetCalendarsErrorReason_GET_CALENDARS_ERROR_REASON_INTERNAL_SERVER_ERROR          GetCalendarsErrorReason = 1
	GetCalendarsErrorReason_GET_CALENDARS_ERROR_REASON_COULD_NOT_VERIFY_SESSION_ERROR GetCalendarsErrorReason = 2
	GetCalendarsErrorReason_GET_CALENDARS_ERROR_REASON_DO_NOT_OWN_CALENDAR_ERROR      GetCalendarsErrorReason = 3
	GetCalendarsErrorReason_GET_CALENDARS_ERROR_REASON_CALENDAR_NOT_FOUND_ERROR       GetCalendarsErrorReason = 4
	GetCalendarsErrorReason_GET_CALENDARS_ERROR_REASON_TOO_MANY_CALENDARS_ERROR       GetCalendarsErrorReason = 5
)

var GetCalendarsErrorReason_name = map[int32]string{
	0: "GET_CALENDARS_ERROR_REASON_NO_ERROR",
	1: "GET_CALENDARS_ERROR_REASON_INTERNAL_SERVER_ERROR",
	2: "GET_CALENDARS_ERROR_REASON_COULD_NOT_VERIFY_SESSION_ERROR",
	3: "GET_CALENDARS_ERROR_REASON_DO_NOT_OWN_CALENDAR_ERROR",
	4: "GET_CALENDARS_ERROR_REASON_CALENDAR_NOT_FOUND_ERROR",
	5: "GET_CALENDARS_ERROR_REASON_TOO_MANY_CALENDARS_ERROR",
}

var GetCalendarsErrorReason_value = map[string]int32{
	"GET_CALENDARS_ERROR_REASON_NO_ERROR":                       0,
	"GET_CALENDARS_ERROR_REASON_INTERNAL_SERVER_ERROR":          1,
	"GET_CALENDARS_ERROR_REASON_COULD_NOT_VERIFY_SESSION_ERROR": 2,
	"GET_CALENDARS_ERROR_REASON_DO_NOT_OWN_CALENDAR_ERROR":      3,
	"GET_CALENDARS_ERROR_REASON_CALENDAR_NOT_FOUND_ERROR":       4,
	"GET_CALENDARS_ERROR_REASON_TOO_MANY_CALENDARS_ERROR":       5,
}

func (x GetCalendarsErrorReason) String() string {
	return proto.EnumName(GetCalendarsErrorReason_name, int32(x))
}

func (GetCalendarsErrorReason) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_e3d25d49f056cdb2, []int{2}
}

type UpdateCalendarActionType int32

const (
	UpdateCalendarActionType_UPDATE_CALENDAR_ACTION_TYPE_CHANGE_NAME            UpdateCalendarActionType = 0
	UpdateCalendarActionType_UPDATE_CALENDAR_ACTION_TYPE_CHANGE_COLOR           UpdateCalendarActionType = 1
	UpdateCalendarActionType_UPDATE_CALENDAR_ACTION_TYPE_CHANGE_NAME_AND_COLOR  UpdateCalendarActionType = 2
	UpdateCalendarActionType_UPDATE_CALENDAR_ACTION_TYPE_ADD_HIGHLIGHTED_DAY    UpdateCalendarActionType = 3
	UpdateCalendarActionType_UPDATE_CALENDAR_ACTION_TYPE_REMOVE_HIGHLIGHTED_DAY UpdateCalendarActionType = 4
)

var UpdateCalendarActionType_name = map[int32]string{
	0: "UPDATE_CALENDAR_ACTION_TYPE_CHANGE_NAME",
	1: "UPDATE_CALENDAR_ACTION_TYPE_CHANGE_COLOR",
	2: "UPDATE_CALENDAR_ACTION_TYPE_CHANGE_NAME_AND_COLOR",
	3: "UPDATE_CALENDAR_ACTION_TYPE_ADD_HIGHLIGHTED_DAY",
	4: "UPDATE_CALENDAR_ACTION_TYPE_REMOVE_HIGHLIGHTED_DAY",
}

var UpdateCalendarActionType_value = map[string]int32{
	"UPDATE_CALENDAR_ACTION_TYPE_CHANGE_NAME":            0,
	"UPDATE_CALENDAR_ACTION_TYPE_CHANGE_COLOR":           1,
	"UPDATE_CALENDAR_ACTION_TYPE_CHANGE_NAME_AND_COLOR":  2,
	"UPDATE_CALENDAR_ACTION_TYPE_ADD_HIGHLIGHTED_DAY":    3,
	"UPDATE_CALENDAR_ACTION_TYPE_REMOVE_HIGHLIGHTED_DAY": 4,
}

func (x UpdateCalendarActionType) String() string {
	return proto.EnumName(UpdateCalendarActionType_name, int32(x))
}

func (UpdateCalendarActionType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_e3d25d49f056cdb2, []int{3}
}

type UpdateCalendarsErrorReason int32

const (
	UpdateCalendarsErrorReason_UPDATE_CALENDARS_ERROR_REASON_NO_ERROR                       UpdateCalendarsErrorReason = 0
	UpdateCalendarsErrorReason_UPDATE_CALENDARS_ERROR_REASON_INTERNAL_SERVER_ERROR          UpdateCalendarsErrorReason = 1
	UpdateCalendarsErrorReason_UPDATE_CALENDARS_ERROR_REASON_COULD_NOT_VERIFY_SESSION_ERROR UpdateCalendarsErrorReason = 2
	UpdateCalendarsErrorReason_UPDATE_CALENDARS_ERROR_REASON_DO_NOT_OWN_CALENDAR_ERROR      UpdateCalendarsErrorReason = 3
	UpdateCalendarsErrorReason_UPDATE_CALENDARS_ERROR_REASON_CALENDAR_NOT_FOUND_ERROR       UpdateCalendarsErrorReason = 4
	UpdateCalendarsErrorReason_UPDATE_CALENDARS_ERROR_REASON_TOO_MANY_CALENDARS_ERROR       UpdateCalendarsErrorReason = 5
)

var UpdateCalendarsErrorReason_name = map[int32]string{
	0: "UPDATE_CALENDARS_ERROR_REASON_NO_ERROR",
	1: "UPDATE_CALENDARS_ERROR_REASON_INTERNAL_SERVER_ERROR",
	2: "UPDATE_CALENDARS_ERROR_REASON_COULD_NOT_VERIFY_SESSION_ERROR",
	3: "UPDATE_CALENDARS_ERROR_REASON_DO_NOT_OWN_CALENDAR_ERROR",
	4: "UPDATE_CALENDARS_ERROR_REASON_CALENDAR_NOT_FOUND_ERROR",
	5: "UPDATE_CALENDARS_ERROR_REASON_TOO_MANY_CALENDARS_ERROR",
}

var UpdateCalendarsErrorReason_value = map[string]int32{
	"UPDATE_CALENDARS_ERROR_REASON_NO_ERROR":                       0,
	"UPDATE_CALENDARS_ERROR_REASON_INTERNAL_SERVER_ERROR":          1,
	"UPDATE_CALENDARS_ERROR_REASON_COULD_NOT_VERIFY_SESSION_ERROR": 2,
	"UPDATE_CALENDARS_ERROR_REASON_DO_NOT_OWN_CALENDAR_ERROR":      3,
	"UPDATE_CALENDARS_ERROR_REASON_CALENDAR_NOT_FOUND_ERROR":       4,
	"UPDATE_CALENDARS_ERROR_REASON_TOO_MANY_CALENDARS_ERROR":       5,
}

func (x UpdateCalendarsErrorReason) String() string {
	return proto.EnumName(UpdateCalendarsErrorReason_name, int32(x))
}

func (UpdateCalendarsErrorReason) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_e3d25d49f056cdb2, []int{4}
}

type ListCalendarsRequest struct {
	UserId    string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	SessionId string `protobuf:"bytes,2,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	// Maximum number of calendar summaries per response page. If 0 or smaller then server will enforce an arbitrary
	// default value.
	MaxResults int64 `protobuf:"varint,3,opt,name=max_results,json=maxResults,proto3" json:"max_results,omitempty"`
	// This is a pagination token for the ListCalendars API. This is opaque to clients and clients cannot deserialize it
	// to ListCalendarsRequestNextToken. If clients want to resume pagination they should re-use this.
	NextToken            *ListCalendarsRequestNextTokenOpaque `protobuf:"bytes,4,opt,name=next_token,json=nextToken,proto3" json:"next_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                             `json:"-"`
	XXX_unrecognized     []byte                               `json:"-"`
	XXX_sizecache        int32                                `json:"-"`
}

func (m *ListCalendarsRequest) Reset()         { *m = ListCalendarsRequest{} }
func (m *ListCalendarsRequest) String() string { return proto.CompactTextString(m) }
func (*ListCalendarsRequest) ProtoMessage()    {}
func (*ListCalendarsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e3d25d49f056cdb2, []int{0}
}

func (m *ListCalendarsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListCalendarsRequest.Unmarshal(m, b)
}
func (m *ListCalendarsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListCalendarsRequest.Marshal(b, m, deterministic)
}
func (m *ListCalendarsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListCalendarsRequest.Merge(m, src)
}
func (m *ListCalendarsRequest) XXX_Size() int {
	return xxx_messageInfo_ListCalendarsRequest.Size(m)
}
func (m *ListCalendarsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListCalendarsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListCalendarsRequest proto.InternalMessageInfo

func (m *ListCalendarsRequest) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *ListCalendarsRequest) GetSessionId() string {
	if m != nil {
		return m.SessionId
	}
	return ""
}

func (m *ListCalendarsRequest) GetMaxResults() int64 {
	if m != nil {
		return m.MaxResults
	}
	return 0
}

func (m *ListCalendarsRequest) GetNextToken() *ListCalendarsRequestNextTokenOpaque {
	if m != nil {
		return m.NextToken
	}
	return nil
}

type ListCalendarsRequestNextTokenOpaque struct {
	OpaqueNextToken      []byte   `protobuf:"bytes,1,opt,name=opaque_next_token,json=opaqueNextToken,proto3" json:"opaque_next_token,omitempty"`
	EncryptionKeyUsed    string   `protobuf:"bytes,2,opt,name=encryption_key_used,json=encryptionKeyUsed,proto3" json:"encryption_key_used,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListCalendarsRequestNextTokenOpaque) Reset()         { *m = ListCalendarsRequestNextTokenOpaque{} }
func (m *ListCalendarsRequestNextTokenOpaque) String() string { return proto.CompactTextString(m) }
func (*ListCalendarsRequestNextTokenOpaque) ProtoMessage()    {}
func (*ListCalendarsRequestNextTokenOpaque) Descriptor() ([]byte, []int) {
	return fileDescriptor_e3d25d49f056cdb2, []int{1}
}

func (m *ListCalendarsRequestNextTokenOpaque) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListCalendarsRequestNextTokenOpaque.Unmarshal(m, b)
}
func (m *ListCalendarsRequestNextTokenOpaque) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListCalendarsRequestNextTokenOpaque.Marshal(b, m, deterministic)
}
func (m *ListCalendarsRequestNextTokenOpaque) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListCalendarsRequestNextTokenOpaque.Merge(m, src)
}
func (m *ListCalendarsRequestNextTokenOpaque) XXX_Size() int {
	return xxx_messageInfo_ListCalendarsRequestNextTokenOpaque.Size(m)
}
func (m *ListCalendarsRequestNextTokenOpaque) XXX_DiscardUnknown() {
	xxx_messageInfo_ListCalendarsRequestNextTokenOpaque.DiscardUnknown(m)
}

var xxx_messageInfo_ListCalendarsRequestNextTokenOpaque proto.InternalMessageInfo

func (m *ListCalendarsRequestNextTokenOpaque) GetOpaqueNextToken() []byte {
	if m != nil {
		return m.OpaqueNextToken
	}
	return nil
}

func (m *ListCalendarsRequestNextTokenOpaque) GetEncryptionKeyUsed() string {
	if m != nil {
		return m.EncryptionKeyUsed
	}
	return ""
}

type ListCalendarsRequestNextToken struct {
	Version int64 `protobuf:"varint,1,opt,name=version,proto3" json:"version,omitempty"`
	// The user ID inside the token must not be used for authorization purposes. Rather you first
	// authorize the request parameters, and then compare to the inner user_id.
	UserId string `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// The session ID inside the token must not be used for authorization purposes. Rather you first
	// authorize the request parameters, and then compare to the inner session_id.
	SessionId string `protobuf:"bytes,3,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	// This is how we'll resume the DynamoDB query, using the last evaluated sort key, i.e. calendar ID. It may be
	// absent (empty map), meaning there are no more pages.
	DynamodbNextToken map[string]string `protobuf:"bytes,4,rep,name=dynamodb_next_token,json=dynamodbNextToken,proto3" json:"dynamodb_next_token,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// Pagination tokens can expire to prevent indefinite re-use.
	ExpiryEpochSeconds   int64    `protobuf:"varint,5,opt,name=expiry_epoch_seconds,json=expiryEpochSeconds,proto3" json:"expiry_epoch_seconds,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListCalendarsRequestNextToken) Reset()         { *m = ListCalendarsRequestNextToken{} }
func (m *ListCalendarsRequestNextToken) String() string { return proto.CompactTextString(m) }
func (*ListCalendarsRequestNextToken) ProtoMessage()    {}
func (*ListCalendarsRequestNextToken) Descriptor() ([]byte, []int) {
	return fileDescriptor_e3d25d49f056cdb2, []int{2}
}

func (m *ListCalendarsRequestNextToken) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListCalendarsRequestNextToken.Unmarshal(m, b)
}
func (m *ListCalendarsRequestNextToken) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListCalendarsRequestNextToken.Marshal(b, m, deterministic)
}
func (m *ListCalendarsRequestNextToken) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListCalendarsRequestNextToken.Merge(m, src)
}
func (m *ListCalendarsRequestNextToken) XXX_Size() int {
	return xxx_messageInfo_ListCalendarsRequestNextToken.Size(m)
}
func (m *ListCalendarsRequestNextToken) XXX_DiscardUnknown() {
	xxx_messageInfo_ListCalendarsRequestNextToken.DiscardUnknown(m)
}

var xxx_messageInfo_ListCalendarsRequestNextToken proto.InternalMessageInfo

func (m *ListCalendarsRequestNextToken) GetVersion() int64 {
	if m != nil {
		return m.Version
	}
	return 0
}

func (m *ListCalendarsRequestNextToken) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *ListCalendarsRequestNextToken) GetSessionId() string {
	if m != nil {
		return m.SessionId
	}
	return ""
}

func (m *ListCalendarsRequestNextToken) GetDynamodbNextToken() map[string]string {
	if m != nil {
		return m.DynamodbNextToken
	}
	return nil
}

func (m *ListCalendarsRequestNextToken) GetExpiryEpochSeconds() int64 {
	if m != nil {
		return m.ExpiryEpochSeconds
	}
	return 0
}

type ListCalendarsResponse struct {
	Success              bool                                 `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	ErrorReason          ListCalendarsErrorReason             `protobuf:"varint,2,opt,name=error_reason,json=errorReason,proto3,enum=simpletracker.ListCalendarsErrorReason" json:"error_reason,omitempty"`
	CalendarSummaries    []*CalendarSummary                   `protobuf:"bytes,3,rep,name=calendarSummaries,proto3" json:"calendarSummaries,omitempty"`
	NextToken            *ListCalendarsRequestNextTokenOpaque `protobuf:"bytes,4,opt,name=next_token,json=nextToken,proto3" json:"next_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                             `json:"-"`
	XXX_unrecognized     []byte                               `json:"-"`
	XXX_sizecache        int32                                `json:"-"`
}

func (m *ListCalendarsResponse) Reset()         { *m = ListCalendarsResponse{} }
func (m *ListCalendarsResponse) String() string { return proto.CompactTextString(m) }
func (*ListCalendarsResponse) ProtoMessage()    {}
func (*ListCalendarsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e3d25d49f056cdb2, []int{3}
}

func (m *ListCalendarsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListCalendarsResponse.Unmarshal(m, b)
}
func (m *ListCalendarsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListCalendarsResponse.Marshal(b, m, deterministic)
}
func (m *ListCalendarsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListCalendarsResponse.Merge(m, src)
}
func (m *ListCalendarsResponse) XXX_Size() int {
	return xxx_messageInfo_ListCalendarsResponse.Size(m)
}
func (m *ListCalendarsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListCalendarsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListCalendarsResponse proto.InternalMessageInfo

func (m *ListCalendarsResponse) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

func (m *ListCalendarsResponse) GetErrorReason() ListCalendarsErrorReason {
	if m != nil {
		return m.ErrorReason
	}
	return ListCalendarsErrorReason_LIST_CALENDARS_ERROR_REASON_NO_ERROR
}

func (m *ListCalendarsResponse) GetCalendarSummaries() []*CalendarSummary {
	if m != nil {
		return m.CalendarSummaries
	}
	return nil
}

func (m *ListCalendarsResponse) GetNextToken() *ListCalendarsRequestNextTokenOpaque {
	if m != nil {
		return m.NextToken
	}
	return nil
}

type CalendarSummary struct {
	// Format version field (not an OCC field).
	FormatVersion int64  `protobuf:"varint,1,opt,name=formatVersion,proto3" json:"formatVersion,omitempty"`
	OwnerUserid   string `protobuf:"bytes,2,opt,name=ownerUserid,proto3" json:"ownerUserid,omitempty"`
	Id            string `protobuf:"bytes,3,opt,name=id,proto3" json:"id,omitempty"`
	Name          string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	Color         string `protobuf:"bytes,5,opt,name=color,proto3" json:"color,omitempty"`
	// OCC version field.
	Version              int64    `protobuf:"varint,6,opt,name=version,proto3" json:"version,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CalendarSummary) Reset()         { *m = CalendarSummary{} }
func (m *CalendarSummary) String() string { return proto.CompactTextString(m) }
func (*CalendarSummary) ProtoMessage()    {}
func (*CalendarSummary) Descriptor() ([]byte, []int) {
	return fileDescriptor_e3d25d49f056cdb2, []int{4}
}

func (m *CalendarSummary) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CalendarSummary.Unmarshal(m, b)
}
func (m *CalendarSummary) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CalendarSummary.Marshal(b, m, deterministic)
}
func (m *CalendarSummary) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CalendarSummary.Merge(m, src)
}
func (m *CalendarSummary) XXX_Size() int {
	return xxx_messageInfo_CalendarSummary.Size(m)
}
func (m *CalendarSummary) XXX_DiscardUnknown() {
	xxx_messageInfo_CalendarSummary.DiscardUnknown(m)
}

var xxx_messageInfo_CalendarSummary proto.InternalMessageInfo

func (m *CalendarSummary) GetFormatVersion() int64 {
	if m != nil {
		return m.FormatVersion
	}
	return 0
}

func (m *CalendarSummary) GetOwnerUserid() string {
	if m != nil {
		return m.OwnerUserid
	}
	return ""
}

func (m *CalendarSummary) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *CalendarSummary) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *CalendarSummary) GetColor() string {
	if m != nil {
		return m.Color
	}
	return ""
}

func (m *CalendarSummary) GetVersion() int64 {
	if m != nil {
		return m.Version
	}
	return 0
}

type CalendarDetail struct {
	Summary *CalendarSummary `protobuf:"bytes,1,opt,name=summary,proto3" json:"summary,omitempty"`
	// Highlighted days is a list of strings. This field is first JSON-serialized and then ZLIB-compressed.
	HighlightedDays      []byte   `protobuf:"bytes,2,opt,name=highlighted_days,json=highlightedDays,proto3" json:"highlighted_days,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CalendarDetail) Reset()         { *m = CalendarDetail{} }
func (m *CalendarDetail) String() string { return proto.CompactTextString(m) }
func (*CalendarDetail) ProtoMessage()    {}
func (*CalendarDetail) Descriptor() ([]byte, []int) {
	return fileDescriptor_e3d25d49f056cdb2, []int{5}
}

func (m *CalendarDetail) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CalendarDetail.Unmarshal(m, b)
}
func (m *CalendarDetail) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CalendarDetail.Marshal(b, m, deterministic)
}
func (m *CalendarDetail) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CalendarDetail.Merge(m, src)
}
func (m *CalendarDetail) XXX_Size() int {
	return xxx_messageInfo_CalendarDetail.Size(m)
}
func (m *CalendarDetail) XXX_DiscardUnknown() {
	xxx_messageInfo_CalendarDetail.DiscardUnknown(m)
}

var xxx_messageInfo_CalendarDetail proto.InternalMessageInfo

func (m *CalendarDetail) GetSummary() *CalendarSummary {
	if m != nil {
		return m.Summary
	}
	return nil
}

func (m *CalendarDetail) GetHighlightedDays() []byte {
	if m != nil {
		return m.HighlightedDays
	}
	return nil
}

// Helper proto for a list of strings for highlighted days
type ListOfStrings struct {
	Strings              []string `protobuf:"bytes,1,rep,name=strings,proto3" json:"strings,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListOfStrings) Reset()         { *m = ListOfStrings{} }
func (m *ListOfStrings) String() string { return proto.CompactTextString(m) }
func (*ListOfStrings) ProtoMessage()    {}
func (*ListOfStrings) Descriptor() ([]byte, []int) {
	return fileDescriptor_e3d25d49f056cdb2, []int{6}
}

func (m *ListOfStrings) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListOfStrings.Unmarshal(m, b)
}
func (m *ListOfStrings) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListOfStrings.Marshal(b, m, deterministic)
}
func (m *ListOfStrings) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListOfStrings.Merge(m, src)
}
func (m *ListOfStrings) XXX_Size() int {
	return xxx_messageInfo_ListOfStrings.Size(m)
}
func (m *ListOfStrings) XXX_DiscardUnknown() {
	xxx_messageInfo_ListOfStrings.DiscardUnknown(m)
}

var xxx_messageInfo_ListOfStrings proto.InternalMessageInfo

func (m *ListOfStrings) GetStrings() []string {
	if m != nil {
		return m.Strings
	}
	return nil
}

type CreateCalendarRequest struct {
	UserId               string   `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	SessionId            string   `protobuf:"bytes,2,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	Name                 string   `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Color                string   `protobuf:"bytes,4,opt,name=color,proto3" json:"color,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateCalendarRequest) Reset()         { *m = CreateCalendarRequest{} }
func (m *CreateCalendarRequest) String() string { return proto.CompactTextString(m) }
func (*CreateCalendarRequest) ProtoMessage()    {}
func (*CreateCalendarRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e3d25d49f056cdb2, []int{7}
}

func (m *CreateCalendarRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateCalendarRequest.Unmarshal(m, b)
}
func (m *CreateCalendarRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateCalendarRequest.Marshal(b, m, deterministic)
}
func (m *CreateCalendarRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateCalendarRequest.Merge(m, src)
}
func (m *CreateCalendarRequest) XXX_Size() int {
	return xxx_messageInfo_CreateCalendarRequest.Size(m)
}
func (m *CreateCalendarRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateCalendarRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateCalendarRequest proto.InternalMessageInfo

func (m *CreateCalendarRequest) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *CreateCalendarRequest) GetSessionId() string {
	if m != nil {
		return m.SessionId
	}
	return ""
}

func (m *CreateCalendarRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *CreateCalendarRequest) GetColor() string {
	if m != nil {
		return m.Color
	}
	return ""
}

type CreateCalendarResponse struct {
	Success              bool                      `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	ErrorReason          CreateCalendarErrorReason `protobuf:"varint,2,opt,name=error_reason,json=errorReason,proto3,enum=simpletracker.CreateCalendarErrorReason" json:"error_reason,omitempty"`
	CalendarDetail       *CalendarDetail           `protobuf:"bytes,3,opt,name=calendar_detail,json=calendarDetail,proto3" json:"calendar_detail,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *CreateCalendarResponse) Reset()         { *m = CreateCalendarResponse{} }
func (m *CreateCalendarResponse) String() string { return proto.CompactTextString(m) }
func (*CreateCalendarResponse) ProtoMessage()    {}
func (*CreateCalendarResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e3d25d49f056cdb2, []int{8}
}

func (m *CreateCalendarResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateCalendarResponse.Unmarshal(m, b)
}
func (m *CreateCalendarResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateCalendarResponse.Marshal(b, m, deterministic)
}
func (m *CreateCalendarResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateCalendarResponse.Merge(m, src)
}
func (m *CreateCalendarResponse) XXX_Size() int {
	return xxx_messageInfo_CreateCalendarResponse.Size(m)
}
func (m *CreateCalendarResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateCalendarResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateCalendarResponse proto.InternalMessageInfo

func (m *CreateCalendarResponse) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

func (m *CreateCalendarResponse) GetErrorReason() CreateCalendarErrorReason {
	if m != nil {
		return m.ErrorReason
	}
	return CreateCalendarErrorReason_CREATE_CALENDAR_ERROR_REASON_NO_ERROR
}

func (m *CreateCalendarResponse) GetCalendarDetail() *CalendarDetail {
	if m != nil {
		return m.CalendarDetail
	}
	return nil
}

type GetCalendarsRequest struct {
	UserId               string   `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	SessionId            string   `protobuf:"bytes,2,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	CalendarIds          []string `protobuf:"bytes,3,rep,name=calendar_ids,json=calendarIds,proto3" json:"calendar_ids,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetCalendarsRequest) Reset()         { *m = GetCalendarsRequest{} }
func (m *GetCalendarsRequest) String() string { return proto.CompactTextString(m) }
func (*GetCalendarsRequest) ProtoMessage()    {}
func (*GetCalendarsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e3d25d49f056cdb2, []int{9}
}

func (m *GetCalendarsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetCalendarsRequest.Unmarshal(m, b)
}
func (m *GetCalendarsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetCalendarsRequest.Marshal(b, m, deterministic)
}
func (m *GetCalendarsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetCalendarsRequest.Merge(m, src)
}
func (m *GetCalendarsRequest) XXX_Size() int {
	return xxx_messageInfo_GetCalendarsRequest.Size(m)
}
func (m *GetCalendarsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetCalendarsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetCalendarsRequest proto.InternalMessageInfo

func (m *GetCalendarsRequest) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *GetCalendarsRequest) GetSessionId() string {
	if m != nil {
		return m.SessionId
	}
	return ""
}

func (m *GetCalendarsRequest) GetCalendarIds() []string {
	if m != nil {
		return m.CalendarIds
	}
	return nil
}

type GetCalendarsResponse struct {
	Success              bool                    `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	ErrorReason          GetCalendarsErrorReason `protobuf:"varint,2,opt,name=error_reason,json=errorReason,proto3,enum=simpletracker.GetCalendarsErrorReason" json:"error_reason,omitempty"`
	CalendarDetails      []*CalendarDetail       `protobuf:"bytes,3,rep,name=calendar_details,json=calendarDetails,proto3" json:"calendar_details,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *GetCalendarsResponse) Reset()         { *m = GetCalendarsResponse{} }
func (m *GetCalendarsResponse) String() string { return proto.CompactTextString(m) }
func (*GetCalendarsResponse) ProtoMessage()    {}
func (*GetCalendarsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e3d25d49f056cdb2, []int{10}
}

func (m *GetCalendarsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetCalendarsResponse.Unmarshal(m, b)
}
func (m *GetCalendarsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetCalendarsResponse.Marshal(b, m, deterministic)
}
func (m *GetCalendarsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetCalendarsResponse.Merge(m, src)
}
func (m *GetCalendarsResponse) XXX_Size() int {
	return xxx_messageInfo_GetCalendarsResponse.Size(m)
}
func (m *GetCalendarsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetCalendarsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetCalendarsResponse proto.InternalMessageInfo

func (m *GetCalendarsResponse) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

func (m *GetCalendarsResponse) GetErrorReason() GetCalendarsErrorReason {
	if m != nil {
		return m.ErrorReason
	}
	return GetCalendarsErrorReason_GET_CALENDARS_ERROR_REASON_NO_ERROR
}

func (m *GetCalendarsResponse) GetCalendarDetails() []*CalendarDetail {
	if m != nil {
		return m.CalendarDetails
	}
	return nil
}

type UpdateCalendarsRequest struct {
	UserId    string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	SessionId string `protobuf:"bytes,2,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	// Map calendar ID to actions on that calendar
	Actions              map[string]*UpdateCalendarAction `protobuf:"bytes,3,rep,name=actions,proto3" json:"actions,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}                         `json:"-"`
	XXX_unrecognized     []byte                           `json:"-"`
	XXX_sizecache        int32                            `json:"-"`
}

func (m *UpdateCalendarsRequest) Reset()         { *m = UpdateCalendarsRequest{} }
func (m *UpdateCalendarsRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateCalendarsRequest) ProtoMessage()    {}
func (*UpdateCalendarsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e3d25d49f056cdb2, []int{11}
}

func (m *UpdateCalendarsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateCalendarsRequest.Unmarshal(m, b)
}
func (m *UpdateCalendarsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateCalendarsRequest.Marshal(b, m, deterministic)
}
func (m *UpdateCalendarsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateCalendarsRequest.Merge(m, src)
}
func (m *UpdateCalendarsRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateCalendarsRequest.Size(m)
}
func (m *UpdateCalendarsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateCalendarsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateCalendarsRequest proto.InternalMessageInfo

func (m *UpdateCalendarsRequest) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *UpdateCalendarsRequest) GetSessionId() string {
	if m != nil {
		return m.SessionId
	}
	return ""
}

func (m *UpdateCalendarsRequest) GetActions() map[string]*UpdateCalendarAction {
	if m != nil {
		return m.Actions
	}
	return nil
}

type UpdateCalendarAction struct {
	CalendarId           string                   `protobuf:"bytes,1,opt,name=calendar_id,json=calendarId,proto3" json:"calendar_id,omitempty"`
	ExistingVersion      int64                    `protobuf:"varint,2,opt,name=existing_version,json=existingVersion,proto3" json:"existing_version,omitempty"`
	ActionType           UpdateCalendarActionType `protobuf:"varint,3,opt,name=action_type,json=actionType,proto3,enum=simpletracker.UpdateCalendarActionType" json:"action_type,omitempty"`
	NewName              string                   `protobuf:"bytes,4,opt,name=new_name,json=newName,proto3" json:"new_name,omitempty"`
	NewColor             string                   `protobuf:"bytes,5,opt,name=new_color,json=newColor,proto3" json:"new_color,omitempty"`
	AddHighlightedDay    string                   `protobuf:"bytes,6,opt,name=add_highlighted_day,json=addHighlightedDay,proto3" json:"add_highlighted_day,omitempty"`
	RemoveHighlightedDay string                   `protobuf:"bytes,7,opt,name=remove_highlighted_day,json=removeHighlightedDay,proto3" json:"remove_highlighted_day,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *UpdateCalendarAction) Reset()         { *m = UpdateCalendarAction{} }
func (m *UpdateCalendarAction) String() string { return proto.CompactTextString(m) }
func (*UpdateCalendarAction) ProtoMessage()    {}
func (*UpdateCalendarAction) Descriptor() ([]byte, []int) {
	return fileDescriptor_e3d25d49f056cdb2, []int{12}
}

func (m *UpdateCalendarAction) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateCalendarAction.Unmarshal(m, b)
}
func (m *UpdateCalendarAction) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateCalendarAction.Marshal(b, m, deterministic)
}
func (m *UpdateCalendarAction) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateCalendarAction.Merge(m, src)
}
func (m *UpdateCalendarAction) XXX_Size() int {
	return xxx_messageInfo_UpdateCalendarAction.Size(m)
}
func (m *UpdateCalendarAction) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateCalendarAction.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateCalendarAction proto.InternalMessageInfo

func (m *UpdateCalendarAction) GetCalendarId() string {
	if m != nil {
		return m.CalendarId
	}
	return ""
}

func (m *UpdateCalendarAction) GetExistingVersion() int64 {
	if m != nil {
		return m.ExistingVersion
	}
	return 0
}

func (m *UpdateCalendarAction) GetActionType() UpdateCalendarActionType {
	if m != nil {
		return m.ActionType
	}
	return UpdateCalendarActionType_UPDATE_CALENDAR_ACTION_TYPE_CHANGE_NAME
}

func (m *UpdateCalendarAction) GetNewName() string {
	if m != nil {
		return m.NewName
	}
	return ""
}

func (m *UpdateCalendarAction) GetNewColor() string {
	if m != nil {
		return m.NewColor
	}
	return ""
}

func (m *UpdateCalendarAction) GetAddHighlightedDay() string {
	if m != nil {
		return m.AddHighlightedDay
	}
	return ""
}

func (m *UpdateCalendarAction) GetRemoveHighlightedDay() string {
	if m != nil {
		return m.RemoveHighlightedDay
	}
	return ""
}

type UpdateCalendarsResponse struct {
	Success              bool                       `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	ErrorReason          UpdateCalendarsErrorReason `protobuf:"varint,2,opt,name=error_reason,json=errorReason,proto3,enum=simpletracker.UpdateCalendarsErrorReason" json:"error_reason,omitempty"`
	CalendarDetails      []*CalendarDetail          `protobuf:"bytes,3,rep,name=calendar_details,json=calendarDetails,proto3" json:"calendar_details,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                   `json:"-"`
	XXX_unrecognized     []byte                     `json:"-"`
	XXX_sizecache        int32                      `json:"-"`
}

func (m *UpdateCalendarsResponse) Reset()         { *m = UpdateCalendarsResponse{} }
func (m *UpdateCalendarsResponse) String() string { return proto.CompactTextString(m) }
func (*UpdateCalendarsResponse) ProtoMessage()    {}
func (*UpdateCalendarsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e3d25d49f056cdb2, []int{13}
}

func (m *UpdateCalendarsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateCalendarsResponse.Unmarshal(m, b)
}
func (m *UpdateCalendarsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateCalendarsResponse.Marshal(b, m, deterministic)
}
func (m *UpdateCalendarsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateCalendarsResponse.Merge(m, src)
}
func (m *UpdateCalendarsResponse) XXX_Size() int {
	return xxx_messageInfo_UpdateCalendarsResponse.Size(m)
}
func (m *UpdateCalendarsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateCalendarsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateCalendarsResponse proto.InternalMessageInfo

func (m *UpdateCalendarsResponse) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

func (m *UpdateCalendarsResponse) GetErrorReason() UpdateCalendarsErrorReason {
	if m != nil {
		return m.ErrorReason
	}
	return UpdateCalendarsErrorReason_UPDATE_CALENDARS_ERROR_REASON_NO_ERROR
}

func (m *UpdateCalendarsResponse) GetCalendarDetails() []*CalendarDetail {
	if m != nil {
		return m.CalendarDetails
	}
	return nil
}

func init() {
	proto.RegisterEnum("simpletracker.ListCalendarsErrorReason", ListCalendarsErrorReason_name, ListCalendarsErrorReason_value)
	proto.RegisterEnum("simpletracker.CreateCalendarErrorReason", CreateCalendarErrorReason_name, CreateCalendarErrorReason_value)
	proto.RegisterEnum("simpletracker.GetCalendarsErrorReason", GetCalendarsErrorReason_name, GetCalendarsErrorReason_value)
	proto.RegisterEnum("simpletracker.UpdateCalendarActionType", UpdateCalendarActionType_name, UpdateCalendarActionType_value)
	proto.RegisterEnum("simpletracker.UpdateCalendarsErrorReason", UpdateCalendarsErrorReason_name, UpdateCalendarsErrorReason_value)
	proto.RegisterType((*ListCalendarsRequest)(nil), "simpletracker.ListCalendarsRequest")
	proto.RegisterType((*ListCalendarsRequestNextTokenOpaque)(nil), "simpletracker.ListCalendarsRequestNextTokenOpaque")
	proto.RegisterType((*ListCalendarsRequestNextToken)(nil), "simpletracker.ListCalendarsRequestNextToken")
	proto.RegisterMapType((map[string]string)(nil), "simpletracker.ListCalendarsRequestNextToken.DynamodbNextTokenEntry")
	proto.RegisterType((*ListCalendarsResponse)(nil), "simpletracker.ListCalendarsResponse")
	proto.RegisterType((*CalendarSummary)(nil), "simpletracker.CalendarSummary")
	proto.RegisterType((*CalendarDetail)(nil), "simpletracker.CalendarDetail")
	proto.RegisterType((*ListOfStrings)(nil), "simpletracker.ListOfStrings")
	proto.RegisterType((*CreateCalendarRequest)(nil), "simpletracker.CreateCalendarRequest")
	proto.RegisterType((*CreateCalendarResponse)(nil), "simpletracker.CreateCalendarResponse")
	proto.RegisterType((*GetCalendarsRequest)(nil), "simpletracker.GetCalendarsRequest")
	proto.RegisterType((*GetCalendarsResponse)(nil), "simpletracker.GetCalendarsResponse")
	proto.RegisterType((*UpdateCalendarsRequest)(nil), "simpletracker.UpdateCalendarsRequest")
	proto.RegisterMapType((map[string]*UpdateCalendarAction)(nil), "simpletracker.UpdateCalendarsRequest.ActionsEntry")
	proto.RegisterType((*UpdateCalendarAction)(nil), "simpletracker.UpdateCalendarAction")
	proto.RegisterType((*UpdateCalendarsResponse)(nil), "simpletracker.UpdateCalendarsResponse")
}

func init() {
	proto.RegisterFile("calendar.proto", fileDescriptor_e3d25d49f056cdb2)
}

var fileDescriptor_e3d25d49f056cdb2 = []byte{
	// 1280 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x58, 0xdd, 0x72, 0xdb, 0x44,
	0x14, 0xae, 0xe4, 0xb4, 0xa9, 0x8f, 0xd3, 0xc4, 0xd9, 0xa4, 0xa9, 0x5b, 0xa6, 0x10, 0xd4, 0xd2,
	0x3a, 0x81, 0x31, 0xad, 0xd3, 0xff, 0xf2, 0xa7, 0xb1, 0xd4, 0xd8, 0xd4, 0x95, 0xca, 0xda, 0x09,
	0x93, 0xab, 0x1d, 0xd5, 0xda, 0x26, 0x9a, 0xd8, 0x92, 0xab, 0x95, 0xdb, 0xe8, 0x92, 0xc7, 0xe0,
	0x86, 0x37, 0xe0, 0x09, 0xb8, 0x60, 0x86, 0x19, 0x86, 0x19, 0x78, 0x07, 0x6e, 0x78, 0x09, 0xee,
	0x60, 0x56, 0xb2, 0x1c, 0x49, 0xb1, 0xe4, 0x30, 0xa5, 0x77, 0xda, 0x3d, 0xe7, 0x3b, 0x3f, 0xdf,
	0x7e, 0x7b, 0xd6, 0x63, 0x58, 0xec, 0x19, 0x7d, 0x6a, 0x9b, 0x86, 0x5b, 0x1b, 0xba, 0x8e, 0xe7,
	0xa0, 0x0b, 0xcc, 0x1a, 0x0c, 0xfb, 0xd4, 0x73, 0x8d, 0xde, 0x21, 0x75, 0xa5, 0x5f, 0x04, 0x58,
	0x6d, 0x5b, 0xcc, 0x6b, 0x8c, 0xbd, 0x18, 0xa6, 0xaf, 0x46, 0x94, 0x79, 0xe8, 0x12, 0xcc, 0x8f,
	0x18, 0x75, 0x89, 0x65, 0x56, 0x84, 0x75, 0xa1, 0x5a, 0xc4, 0xe7, 0xf8, 0xb2, 0x65, 0xa2, 0xab,
	0x00, 0x8c, 0x32, 0x66, 0x39, 0x36, 0xb7, 0x89, 0x81, 0xad, 0x38, 0xde, 0x69, 0x99, 0xe8, 0x03,
	0x28, 0x0d, 0x8c, 0x23, 0xe2, 0x52, 0x36, 0xea, 0x7b, 0xac, 0x52, 0x58, 0x17, 0xaa, 0x05, 0x0c,
	0x03, 0xe3, 0x08, 0x87, 0x3b, 0xe8, 0x1b, 0x00, 0x9b, 0x1e, 0x79, 0xc4, 0x73, 0x0e, 0xa9, 0x5d,
	0x99, 0x5b, 0x17, 0xaa, 0xa5, 0x7a, 0xbd, 0x96, 0xa8, 0xaa, 0x36, 0xad, 0x22, 0x8d, 0x1e, 0x79,
	0x5d, 0x8e, 0xd1, 0x87, 0xc6, 0xab, 0x11, 0xc5, 0x45, 0x3b, 0xda, 0x90, 0xbe, 0x13, 0xe0, 0xda,
	0x29, 0x20, 0x68, 0x13, 0x96, 0x9d, 0xe0, 0x8b, 0xc4, 0x2a, 0xe0, 0xdd, 0x2d, 0xe0, 0xa5, 0xd0,
	0x30, 0x41, 0xa0, 0x1a, 0xac, 0x50, 0xbb, 0xe7, 0xfa, 0x43, 0x8f, 0x77, 0x7a, 0x48, 0x7d, 0x32,
	0x62, 0x34, 0xea, 0x77, 0xf9, 0xd8, 0xf4, 0x94, 0xfa, 0x3b, 0x8c, 0x9a, 0xd2, 0x9f, 0x22, 0x5c,
	0xcd, 0xad, 0x01, 0x55, 0x60, 0xfe, 0x35, 0x75, 0x39, 0x4d, 0x41, 0xce, 0x02, 0x8e, 0x96, 0x71,
	0xae, 0xc5, 0x1c, 0xae, 0x0b, 0x69, 0xae, 0x19, 0xac, 0x98, 0xbe, 0x6d, 0x0c, 0x1c, 0xf3, 0x05,
	0x49, 0x70, 0x5a, 0xa8, 0x96, 0xea, 0x8d, 0xff, 0xc2, 0x69, 0x4d, 0x19, 0xc7, 0x99, 0xec, 0xa8,
	0xb6, 0xe7, 0xfa, 0x78, 0xd9, 0x4c, 0xef, 0xa3, 0x5b, 0xb0, 0x4a, 0x8f, 0x86, 0x96, 0xeb, 0x13,
	0x3a, 0x74, 0x7a, 0x07, 0x84, 0xd1, 0x9e, 0x63, 0x9b, 0xac, 0x72, 0x36, 0xe8, 0x09, 0x85, 0x36,
	0x95, 0x9b, 0x3a, 0xa1, 0xe5, 0x8a, 0x02, 0x6b, 0xd3, 0xc3, 0xa3, 0x32, 0x14, 0x0e, 0xa9, 0x3f,
	0x16, 0x18, 0xff, 0x44, 0xab, 0x70, 0xf6, 0xb5, 0xd1, 0x1f, 0xd1, 0x31, 0x11, 0xe1, 0xe2, 0x91,
	0xf8, 0x40, 0x90, 0x7e, 0x10, 0xe1, 0x62, 0xaa, 0x07, 0x36, 0x74, 0x6c, 0x46, 0x39, 0xb1, 0x6c,
	0xd4, 0xeb, 0x51, 0xc6, 0x82, 0x48, 0xe7, 0x71, 0xb4, 0x44, 0x5f, 0xc3, 0x02, 0x75, 0x5d, 0xc7,
	0x25, 0x2e, 0x35, 0x98, 0x63, 0x07, 0x41, 0x17, 0xeb, 0x37, 0xf3, 0x98, 0x51, 0xb9, 0x3f, 0x0e,
	0xdc, 0x71, 0x89, 0x1e, 0x2f, 0x50, 0x1b, 0x96, 0xa3, 0xab, 0xd4, 0x19, 0x0d, 0x06, 0x86, 0x6b,
	0x51, 0x2e, 0x6f, 0x4e, 0xf5, 0xfb, 0xa9, 0x80, 0x8d, 0x84, 0x9f, 0x8f, 0x4f, 0x02, 0xdf, 0xc5,
	0x2d, 0xf8, 0x51, 0x80, 0xa5, 0x54, 0x66, 0x74, 0x1d, 0x2e, 0xbc, 0x74, 0xdc, 0x81, 0xe1, 0xed,
	0x26, 0x94, 0x97, 0xdc, 0x44, 0xeb, 0x50, 0x72, 0xde, 0xd8, 0xd4, 0xdd, 0x61, 0xd4, 0x9d, 0x68,
	0x30, 0xbe, 0x85, 0x16, 0x41, 0x9c, 0x08, 0x50, 0xb4, 0x4c, 0x84, 0x60, 0xce, 0x36, 0x06, 0x34,
	0x28, 0xbc, 0x88, 0x83, 0x6f, 0x7e, 0x74, 0x3d, 0xa7, 0xef, 0xb8, 0x81, 0x12, 0x8a, 0x38, 0x5c,
	0xc4, 0x55, 0x7f, 0x2e, 0xa1, 0x7a, 0x69, 0x04, 0x8b, 0x51, 0xb9, 0x0a, 0xf5, 0x0c, 0xab, 0x8f,
	0x1e, 0xf0, 0x83, 0x0c, 0x0a, 0x0f, 0xea, 0x9c, 0x4d, 0x6c, 0xe4, 0x8e, 0x36, 0xa0, 0x7c, 0x60,
	0xed, 0x1f, 0xf4, 0xad, 0xfd, 0x03, 0x8f, 0x9a, 0xc4, 0x34, 0x7c, 0x16, 0xb4, 0xb1, 0x80, 0x97,
	0x62, 0xfb, 0x8a, 0xe1, 0x33, 0x69, 0x03, 0x2e, 0x70, 0x62, 0xf5, 0x97, 0x1d, 0xcf, 0xb5, 0xec,
	0x7d, 0x16, 0xc8, 0x27, 0xfc, 0xac, 0x08, 0xeb, 0x85, 0x6a, 0x11, 0x47, 0x4b, 0xc9, 0x87, 0x8b,
	0x0d, 0x97, 0x1a, 0x1e, 0x8d, 0xf2, 0xbe, 0xed, 0x70, 0x8c, 0x68, 0x2b, 0x4c, 0xa3, 0x6d, 0x2e,
	0x46, 0x9b, 0xf4, 0x9b, 0x00, 0x6b, 0xe9, 0xdc, 0x33, 0xe5, 0xfe, 0x74, 0xaa, 0xdc, 0xab, 0x69,
	0x12, 0x13, 0x61, 0x33, 0xf5, 0xfe, 0x04, 0x96, 0x22, 0xd9, 0x12, 0x33, 0x38, 0x9f, 0xa0, 0xec,
	0x52, 0xfd, 0x6a, 0xc6, 0xa1, 0x84, 0x87, 0x88, 0x27, 0x0f, 0x4e, 0xb8, 0x96, 0x86, 0xb0, 0xb2,
	0x4d, 0xff, 0xbf, 0xf7, 0xe5, 0x43, 0x58, 0x98, 0x94, 0x65, 0x99, 0xe1, 0x0d, 0x2c, 0xe2, 0x52,
	0xb4, 0xd7, 0x32, 0x99, 0xf4, 0xab, 0x00, 0xab, 0xc9, 0x94, 0x33, 0x99, 0x6b, 0x4d, 0x65, 0xee,
	0x46, 0xaa, 0xd3, 0x78, 0xd0, 0x4c, 0xde, 0x9a, 0x50, 0x4e, 0xf1, 0x16, 0x8d, 0x89, 0x19, 0xc4,
	0x2d, 0x25, 0x89, 0x63, 0xd2, 0x3f, 0x02, 0xac, 0xed, 0x0c, 0xcd, 0xd8, 0x61, 0xbd, 0x35, 0x7b,
	0x6d, 0x98, 0x37, 0x7a, 0xfc, 0xd9, 0x8a, 0x6a, 0x4a, 0xcf, 0x9c, 0xe9, 0xf9, 0x6a, 0x72, 0x08,
	0x0a, 0x1f, 0x85, 0x28, 0xc4, 0x15, 0x02, 0x0b, 0x71, 0xc3, 0x94, 0x71, 0xfe, 0x30, 0x3e, 0xce,
	0x4b, 0xf5, 0x6b, 0xb9, 0xd9, 0xc2, 0x58, 0xf1, 0x99, 0xff, 0xbb, 0x08, 0xab, 0xd3, 0x7c, 0xf8,
	0xaf, 0x8c, 0x98, 0x0a, 0xc6, 0x19, 0xe1, 0x58, 0x04, 0x7c, 0x20, 0xd0, 0x23, 0x8b, 0x79, 0x96,
	0xbd, 0x4f, 0xa2, 0xf9, 0x23, 0x06, 0xf3, 0x67, 0x29, 0xda, 0x8f, 0xa6, 0x5f, 0x13, 0x4a, 0x61,
	0x43, 0xc4, 0xf3, 0x87, 0xe1, 0xdd, 0x3c, 0xf9, 0x46, 0x4c, 0xab, 0xa2, 0xeb, 0x0f, 0x29, 0x06,
	0x63, 0xf2, 0x8d, 0x2e, 0xc3, 0x79, 0x9b, 0xbe, 0x21, 0xb1, 0xc9, 0x38, 0x6f, 0xd3, 0x37, 0x1a,
	0xbf, 0xe5, 0xef, 0x41, 0x91, 0x9b, 0xe2, 0x03, 0x92, 0xfb, 0x36, 0x82, 0x19, 0x59, 0x83, 0x15,
	0xc3, 0x34, 0x49, 0x6a, 0x82, 0x05, 0xf3, 0xb2, 0x88, 0x97, 0x0d, 0xd3, 0x6c, 0x26, 0x66, 0x18,
	0xba, 0x03, 0x6b, 0x2e, 0x1d, 0x38, 0xaf, 0xe9, 0x09, 0xc8, 0x7c, 0x00, 0x59, 0x0d, 0xad, 0x49,
	0x94, 0xf4, 0x87, 0x00, 0x97, 0x4e, 0x1c, 0xef, 0xcc, 0x9b, 0xd1, 0x9e, 0x7a, 0x33, 0x36, 0xf2,
	0x65, 0xf3, 0xee, 0x2f, 0xc7, 0xe6, 0x4f, 0x02, 0x54, 0xb2, 0x1e, 0x6e, 0x54, 0x85, 0xeb, 0xed,
	0x56, 0xa7, 0x4b, 0x1a, 0x72, 0x5b, 0xd5, 0x14, 0x19, 0x77, 0x88, 0x8a, 0xb1, 0x8e, 0x09, 0x56,
	0xe5, 0x8e, 0xae, 0x11, 0x4d, 0x0f, 0xd7, 0xe5, 0x33, 0xe8, 0x2e, 0xdc, 0xce, 0xf3, 0x6c, 0x69,
	0x5d, 0x15, 0x6b, 0x72, 0x9b, 0x74, 0x54, 0xbc, 0xab, 0xe2, 0x31, 0x4c, 0x40, 0x5f, 0xc0, 0xa3,
	0x3c, 0x58, 0x43, 0xdf, 0x69, 0x2b, 0x44, 0xd3, 0xbb, 0x64, 0x57, 0xc5, 0xad, 0x27, 0x7b, 0xa4,
	0xa3, 0x76, 0x3a, 0x2d, 0x5d, 0x1b, 0xe3, 0xc5, 0xcd, 0x9f, 0x05, 0xb8, 0x9c, 0x39, 0x87, 0xd1,
	0x06, 0x7c, 0xd4, 0xc0, 0xaa, 0xdc, 0x55, 0x27, 0xf1, 0x33, 0xeb, 0xbf, 0x07, 0xf5, 0x5c, 0xd7,
	0xac, 0x06, 0xbe, 0x84, 0xc7, 0xb9, 0xb8, 0x99, 0x1d, 0xfc, 0x25, 0xc2, 0xa5, 0x8c, 0x79, 0x88,
	0x6e, 0xc2, 0xb5, 0x6d, 0xf5, 0x34, 0xec, 0xdf, 0x81, 0x5b, 0x39, 0x8e, 0x59, 0xb5, 0x7f, 0x0e,
	0x0f, 0x73, 0x50, 0xb3, 0x2a, 0x47, 0x0f, 0xe0, 0x4e, 0x0e, 0x5c, 0xd1, 0x03, 0xac, 0xfe, 0xad,
	0x96, 0x62, 0xa6, 0x5c, 0x40, 0xf7, 0x61, 0x2b, 0x2f, 0x71, 0xe4, 0xce, 0xf1, 0x4f, 0xf4, 0x1d,
	0x4d, 0x19, 0x03, 0xe7, 0x66, 0x00, 0xbb, 0xba, 0x4e, 0x9e, 0xc9, 0xda, 0x5e, 0xda, 0x5e, 0x3e,
	0xbb, 0xf9, 0xbd, 0x08, 0x95, 0xac, 0xd1, 0x83, 0x3e, 0x86, 0x9b, 0x3b, 0xcf, 0x95, 0xc4, 0x19,
	0xca, 0x8d, 0x2e, 0x6f, 0xb5, 0xbb, 0xf7, 0x5c, 0x25, 0x8d, 0xa6, 0xac, 0x6d, 0xab, 0x44, 0x93,
	0x9f, 0xa9, 0xe5, 0x33, 0xe8, 0x13, 0xa8, 0x9e, 0xc2, 0xb9, 0xa1, 0xb7, 0x03, 0x8a, 0xef, 0xc2,
	0xed, 0x53, 0x86, 0x26, 0xb2, 0xa6, 0x8c, 0x61, 0x22, 0xda, 0x82, 0x4f, 0xf3, 0x60, 0xb2, 0xa2,
	0x90, 0x66, 0x6b, 0xbb, 0xd9, 0x6e, 0x6d, 0x37, 0xbb, 0xaa, 0x42, 0x14, 0x79, 0xaf, 0x5c, 0xe0,
	0x12, 0xce, 0x03, 0x61, 0xf5, 0x99, 0xbe, 0xab, 0x9e, 0xc0, 0xcd, 0x6d, 0xfe, 0x2d, 0xc2, 0x95,
	0xec, 0xb9, 0x83, 0x36, 0xe1, 0x46, 0x2a, 0x6c, 0xb6, 0x0e, 0xef, 0xc3, 0x56, 0xbe, 0x6f, 0x96,
	0x14, 0xbf, 0x82, 0xcf, 0xf2, 0x81, 0x33, 0xd5, 0xf8, 0x18, 0xee, 0xe7, 0x47, 0xc8, 0x13, 0xe4,
	0x23, 0xb8, 0x37, 0x23, 0x7d, 0xb6, 0x26, 0x67, 0x62, 0xb3, 0x65, 0xf9, 0xe2, 0x5c, 0xf0, 0x5f,
	0xc2, 0xd6, 0xbf, 0x01, 0x00, 0x00, 0xff, 0xff, 0xbc, 0xcf, 0xfe, 0x2f, 0x5d, 0x10, 0x00, 0x00,
}
